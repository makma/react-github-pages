"use strict";var precacheConfig=[["/react-github-pages/index.html","d5b1331bf8b7ac4eed4296d8265d4a94"],["/react-github-pages/static/css/main.00084e40.css","f8f7294721eb3ce3f6715fe8a1a544aa"],["/react-github-pages/static/js/main.5c14527d.js","2dcb2e48013522d5b122978dc4bdac26"],["/react-github-pages/static/media/Core-icons.14fb01c4.woff","14fb01c406a39aab06275f5578c7316f"],["/react-github-pages/static/media/Core-icons.1b9af651.ttf","1b9af651cbf6b3f133faf2bede0e5266"],["/react-github-pages/static/media/Core-icons.4611bc45.eot","4611bc4557599035d912ff07366ad002"],["/react-github-pages/static/media/Core-icons.6823218d.svg","6823218d348f1ba4e035908b672c745a"],["/react-github-pages/static/media/PTSerif-Bold.b2622e38.woff","b2622e38f246209fb933e8b8a6ee76ed"],["/react-github-pages/static/media/SourceSansPro-Bold.54f926c7.woff","54f926c7e2cffb824547c75bc5ac0b5e"],["/react-github-pages/static/media/SourceSansPro-Light.ccdb76a0.woff","ccdb76a033026dbdc3f08c50f4a5263f"],["/react-github-pages/static/media/SourceSansPro-Regular.fdc03546.woff","fdc0354668675e460e18d8e6b880e634"],["/react-github-pages/static/media/banner-default.3203126e.jpg","3203126ed8d4f93f39c79851c592cbcb"],["/react-github-pages/static/media/checkbox-checked.392cb2e0.svg","392cb2e0295e00036c634860a8f0cbad"],["/react-github-pages/static/media/checkbox-unchecked.abf2d2b0.svg","abf2d2b04c7833a4fedc9c07bdb5a642"],["/react-github-pages/static/media/info.171ce4e4.svg","171ce4e4cb28e074f5c9967f7db949b3"],["/react-github-pages/static/media/our-story.6b72dc24.jpg","6b72dc24da21ca0e6d3c4175f81c3cfb"],["/react-github-pages/static/media/radio-button-checked.1a84a9c1.svg","1a84a9c1102aa390f7d788a9a4f4603c"],["/react-github-pages/static/media/radio-button.8c6533e1.svg","8c6533e10367d0901e362f7d295e03b9"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,c){var r=new URL(e);return c&&r.pathname.match(c)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),r=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,c),e=urlsToCacheKeys.has(a));0,e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});